//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MT.Laboratory.Balance.XprXsr.V01
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum SessionIdFault
    {
        
        /// <remarks/>
        NoSessionId,
        
        /// <remarks/>
        NoValidSessionId,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.ISessionService")]
    public interface ISessionService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="OpenSession", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MT.Laboratory.Balance.XprXsr.V01.OpenSessionResponse OpenSession(MT.Laboratory.Balance.XprXsr.V01.OpenSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="CloseSession", ReplyAction="")]
        [System.ServiceModel.FaultContractAttribute(typeof(MT.Laboratory.Balance.XprXsr.V01.SessionIdFault), Action="http://MT/Laboratory/Balance/XprXsr/V01/ISessionService/CloseSessionSessionIdFaul" +
            "tFault", Name="SessionIdFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MT.Laboratory.Balance.XprXsr.V01.CloseSessionResponse CloseSession(MT.Laboratory.Balance.XprXsr.V01.CloseSessionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Cancel", ReplyAction="")]
        [System.ServiceModel.FaultContractAttribute(typeof(MT.Laboratory.Balance.XprXsr.V01.SessionIdFault), Action="http://MT/Laboratory/Balance/XprXsr/V01/ISessionService/CancelSessionIdFaultFault" +
            "", Name="SessionIdFault")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MT.Laboratory.Balance.XprXsr.V01.CancelResponse Cancel(MT.Laboratory.Balance.XprXsr.V01.CancelRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum Outcome
    {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Canceled,
        
        /// <remarks/>
        Timeout,
        
        /// <remarks/>
        Error,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OpenSessionRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class OpenSessionRequest
    {
        
        public OpenSessionRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OpenSessionResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class OpenSessionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        public string Salt;
        
        public OpenSessionResponse()
        {
        }
        
        public OpenSessionResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, string SessionId, string Salt)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.SessionId = SessionId;
            this.Salt = Salt;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CloseSessionRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class CloseSessionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public CloseSessionRequest()
        {
        }
        
        public CloseSessionRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CloseSessionResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class CloseSessionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public CloseSessionResponse()
        {
        }
        
        public CloseSessionResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum CancelType
    {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        CurrentSynchronous,
        
        /// <remarks/>
        Asynchronous,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class CancelRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public MT.Laboratory.Balance.XprXsr.V01.CancelType CancelType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CommandId;
        
        public CancelRequest()
        {
        }
        
        public CancelRequest(string SessionId, MT.Laboratory.Balance.XprXsr.V01.CancelType CancelType, System.Nullable<int> CommandId)
        {
            this.SessionId = SessionId;
            this.CancelType = CancelType;
            this.CommandId = CommandId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class CancelResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public CancelResponse()
        {
        }
        
        public CancelResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISessionServiceChannel : MT.Laboratory.Balance.XprXsr.V01.ISessionService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SessionServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.ISessionService>, MT.Laboratory.Balance.XprXsr.V01.ISessionService
    {
        
        public SessionServiceClient()
        {
        }
        
        public SessionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public SessionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public SessionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public SessionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.OpenSessionResponse OpenSession(MT.Laboratory.Balance.XprXsr.V01.OpenSessionRequest request)
        {
            return base.Channel.OpenSession(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.CloseSessionResponse CloseSession(MT.Laboratory.Balance.XprXsr.V01.CloseSessionRequest request)
        {
            return base.Channel.CloseSession(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.CancelResponse Cancel(MT.Laboratory.Balance.XprXsr.V01.CancelRequest request)
        {
            return base.Channel.Cancel(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.IWeighingService")]
    public interface IWeighingService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="GetWeightRepeatedAsync", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MT.Laboratory.Balance.XprXsr.V01.GetWeightRepeatedAsyncResponse GetWeightRepeatedAsync(MT.Laboratory.Balance.XprXsr.V01.GetWeightRepeatedAsyncRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetWeightAsync", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MT.Laboratory.Balance.XprXsr.V01.GetWeightAsyncResponse GetWeightAsync(MT.Laboratory.Balance.XprXsr.V01.GetWeightAsyncRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetWeight", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetWeightResponse GetWeight(MT.Laboratory.Balance.XprXsr.V01.GetWeightRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Zero", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.ZeroResponse Zero(MT.Laboratory.Balance.XprXsr.V01.ZeroRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Tare", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.TareResponse Tare(MT.Laboratory.Balance.XprXsr.V01.TareRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetPretareValue", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.SetPretareValueResponse SetPretareValue(MT.Laboratory.Balance.XprXsr.V01.SetPretareValueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClearPretareValue", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.ClearPretareValueResponse ClearPretareValue(MT.Laboratory.Balance.XprXsr.V01.ClearPretareValueRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum WeighingCaptureMode
    {
        
        /// <remarks/>
        Stable,
        
        /// <remarks/>
        Immediate,
        
        /// <remarks/>
        TimeInterval,
        
        /// <remarks/>
        WeightChange,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum WeightDetectionMode
    {
        
        /// <remarks/>
        AnyDelta,
        
        /// <remarks/>
        NegativeDelta,
        
        /// <remarks/>
        PositiveDelta,
        
        /// <remarks/>
        AnyTransition,
        
        /// <remarks/>
        NegativeTransition,
        
        /// <remarks/>
        PositiveTransition,
        
        /// <remarks/>
        BelowOrEqual,
        
        /// <remarks/>
        AboveOrEqual,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum Unit
    {
        
        /// <remarks/>
        GramPerMilliliter,
        
        /// <remarks/>
        GramPerMol,
        
        /// <remarks/>
        Bar,
        
        /// <remarks/>
        Currency2,
        
        /// <remarks/>
        Currency1,
        
        /// <remarks/>
        Custom2,
        
        /// <remarks/>
        Custom1,
        
        /// <remarks/>
        Percent,
        
        /// <remarks/>
        Pieces,
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        PoundOunce,
        
        /// <remarks/>
        Baht,
        
        /// <remarks/>
        Tola,
        
        /// <remarks/>
        Tical,
        
        /// <remarks/>
        TaiwanTael,
        
        /// <remarks/>
        SingaporeTael,
        
        /// <remarks/>
        HongKongTael,
        
        /// <remarks/>
        Mesghal,
        
        /// <remarks/>
        Momme,
        
        /// <remarks/>
        Pennyweight,
        
        /// <remarks/>
        Grain,
        
        /// <remarks/>
        TroyOunce,
        
        /// <remarks/>
        Ounce,
        
        /// <remarks/>
        Pound,
        
        /// <remarks/>
        Newton,
        
        /// <remarks/>
        Carat,
        
        /// <remarks/>
        Microgram,
        
        /// <remarks/>
        Milligram,
        
        /// <remarks/>
        Ton,
        
        /// <remarks/>
        Kilogram,
        
        /// <remarks/>
        Gram,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWeightRepeatedAsyncRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetWeightRepeatedAsyncRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<WeighingCaptureMode> WeighingCaptureMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<WeightDetectionMode> WeightDetectionMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> WeightChangeThreshold;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Unit> WeightChangeThresholdUnit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TimeIntervalCaptureDuration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TimeIntervalCaptureDelay;
        
        public GetWeightRepeatedAsyncRequest()
        {
        }
        
        public GetWeightRepeatedAsyncRequest(string SessionId, System.Nullable<WeighingCaptureMode> WeighingCaptureMode, System.Nullable<WeightDetectionMode> WeightDetectionMode, System.Nullable<decimal> WeightChangeThreshold, System.Nullable<Unit> WeightChangeThresholdUnit, System.Nullable<int> TimeIntervalCaptureDuration, System.Nullable<int> TimeIntervalCaptureDelay)
        {
            this.SessionId = SessionId;
            this.WeighingCaptureMode = WeighingCaptureMode;
            this.WeightDetectionMode = WeightDetectionMode;
            this.WeightChangeThreshold = WeightChangeThreshold;
            this.WeightChangeThresholdUnit = WeightChangeThresholdUnit;
            this.TimeIntervalCaptureDuration = TimeIntervalCaptureDuration;
            this.TimeIntervalCaptureDelay = TimeIntervalCaptureDelay;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWeightRepeatedAsyncResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetWeightRepeatedAsyncResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public int CommandId;
        
        public GetWeightRepeatedAsyncResponse()
        {
        }
        
        public GetWeightRepeatedAsyncResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, int CommandId)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.CommandId = CommandId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWeightAsyncRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetWeightAsyncRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<WeighingCaptureMode> WeighingCaptureMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<WeightDetectionMode> WeightDetectionMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> WeightChangeThreshold;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Unit> WeightChangeThresholdUnit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TimeIntervalCaptureDuration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TimeIntervalCaptureDelay;
        
        public GetWeightAsyncRequest()
        {
        }
        
        public GetWeightAsyncRequest(string SessionId, System.Nullable<WeighingCaptureMode> WeighingCaptureMode, System.Nullable<WeightDetectionMode> WeightDetectionMode, System.Nullable<decimal> WeightChangeThreshold, System.Nullable<Unit> WeightChangeThresholdUnit, System.Nullable<int> TimeIntervalCaptureDuration, System.Nullable<int> TimeIntervalCaptureDelay)
        {
            this.SessionId = SessionId;
            this.WeighingCaptureMode = WeighingCaptureMode;
            this.WeightDetectionMode = WeightDetectionMode;
            this.WeightChangeThreshold = WeightChangeThreshold;
            this.WeightChangeThresholdUnit = WeightChangeThresholdUnit;
            this.TimeIntervalCaptureDuration = TimeIntervalCaptureDuration;
            this.TimeIntervalCaptureDelay = TimeIntervalCaptureDelay;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWeightAsyncResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetWeightAsyncResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public int CommandId;
        
        public GetWeightAsyncResponse()
        {
        }
        
        public GetWeightAsyncResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, int CommandId)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.CommandId = CommandId;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class WeightSample
    {
        
        private MeasuredWeight netWeightField;
        
        private MeasuredWeight grossWeightField;
        
        private TareWeight tareWeightField;
        
        private System.Nullable<bool> stableField;
        
        private WeightSampleStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public MeasuredWeight NetWeight
        {
            get
            {
                return this.netWeightField;
            }
            set
            {
                this.netWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public MeasuredWeight GrossWeight
        {
            get
            {
                return this.grossWeightField;
            }
            set
            {
                this.grossWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public TareWeight TareWeight
        {
            get
            {
                return this.tareWeightField;
            }
            set
            {
                this.tareWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<bool> Stable
        {
            get
            {
                return this.stableField;
            }
            set
            {
                this.stableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public WeightSampleStatus Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TareWeight))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class MeasuredWeight : ValueWithUnit
    {
        
        private string customUnitNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CustomUnitName
        {
            get
            {
                return this.customUnitNameField;
            }
            set
            {
                this.customUnitNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MeasuredWeight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TareWeight))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class ValueWithUnit
    {
        
        private string valueField;
        
        private Unit unitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Unit Unit
        {
            get
            {
                return this.unitField;
            }
            set
            {
                this.unitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExternalAdjustmentConfiguration))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InternalAdjustmentConfiguration))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class BaseAdjustmentConfiguration
    {
        
        private AdjustmentType adjustmentTypeField;
        
        private bool blockOnErrorField;
        
        private bool shouldPrintToStripField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AdjustmentType AdjustmentType
        {
            get
            {
                return this.adjustmentTypeField;
            }
            set
            {
                this.adjustmentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool BlockOnError
        {
            get
            {
                return this.blockOnErrorField;
            }
            set
            {
                this.blockOnErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool ShouldPrintToStrip
        {
            get
            {
                return this.shouldPrintToStripField;
            }
            set
            {
                this.shouldPrintToStripField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum AdjustmentType
    {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Internal,
        
        /// <remarks/>
        External,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class ExternalAdjustmentConfiguration : BaseAdjustmentConfiguration
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class InternalAdjustmentConfiguration : BaseAdjustmentConfiguration
    {
        
        private bool asFoundActiveField;
        
        private bool asLeftActiveField;
        
        private bool startAfterLevelingField;
        
        private bool startAfterTemperatureChangeField;
        
        private string startTime1Field;
        
        private string startTime2Field;
        
        private string startTime3Field;
        
        private SchedulingWeekdays weekdaysField;
        
        private System.Nullable<decimal> warnLimitField;
        
        private Unit warnLimitUnitField;
        
        private decimal errorLimitField;
        
        private Unit errorLimitUnitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool AsFoundActive
        {
            get
            {
                return this.asFoundActiveField;
            }
            set
            {
                this.asFoundActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool AsLeftActive
        {
            get
            {
                return this.asLeftActiveField;
            }
            set
            {
                this.asLeftActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool StartAfterLeveling
        {
            get
            {
                return this.startAfterLevelingField;
            }
            set
            {
                this.startAfterLevelingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool StartAfterTemperatureChange
        {
            get
            {
                return this.startAfterTemperatureChangeField;
            }
            set
            {
                this.startAfterTemperatureChangeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=4)]
        public string StartTime1
        {
            get
            {
                return this.startTime1Field;
            }
            set
            {
                this.startTime1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=5)]
        public string StartTime2
        {
            get
            {
                return this.startTime2Field;
            }
            set
            {
                this.startTime2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration", Order=6)]
        public string StartTime3
        {
            get
            {
                return this.startTime3Field;
            }
            set
            {
                this.startTime3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public SchedulingWeekdays Weekdays
        {
            get
            {
                return this.weekdaysField;
            }
            set
            {
                this.weekdaysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public System.Nullable<decimal> WarnLimit
        {
            get
            {
                return this.warnLimitField;
            }
            set
            {
                this.warnLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public Unit WarnLimitUnit
        {
            get
            {
                return this.warnLimitUnitField;
            }
            set
            {
                this.warnLimitUnitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public decimal ErrorLimit
        {
            get
            {
                return this.errorLimitField;
            }
            set
            {
                this.errorLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public Unit ErrorLimitUnit
        {
            get
            {
                return this.errorLimitUnitField;
            }
            set
            {
                this.errorLimitUnitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum SchedulingWeekdays
    {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        Monday = 2,
        
        /// <remarks/>
        Tuesday = 4,
        
        /// <remarks/>
        Wednesday = 8,
        
        /// <remarks/>
        Thursday = 16,
        
        /// <remarks/>
        Friday = 32,
        
        /// <remarks/>
        Saturday = 64,
        
        /// <remarks/>
        Sunday = 128,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class LoginCredentials
    {
        
        private string encryptedPasswordField;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string EncryptedPassword
        {
            get
            {
                return this.encryptedPasswordField;
            }
            set
            {
                this.encryptedPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string UserName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class PeripheralInfo
    {
        
        private PeripheralType peripheralTypeField;
        
        private string nameField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public PeripheralType PeripheralType
        {
            get
            {
                return this.peripheralTypeField;
            }
            set
            {
                this.peripheralTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum PeripheralType
    {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        MtSicsClient,
        
        /// <remarks/>
        PassThrough,
        
        /// <remarks/>
        Printer,
        
        /// <remarks/>
        BarcodeScanner,
        
        /// <remarks/>
        FootSwitch,
        
        /// <remarks/>
        ErgoSens,
        
        /// <remarks/>
        AntiStaticKit,
        
        /// <remarks/>
        RfidReader,
        
        /// <remarks/>
        Feeder,
        
        /// <remarks/>
        SampleChanger,
        
        /// <remarks/>
        Pump,
        
        /// <remarks/>
        LightBarrier,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class DraftShield
    {
        
        private string draftIdField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DraftId
        {
            get
            {
                return this.draftIdField;
            }
            set
            {
                this.draftIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class BalanceInfo
    {
        
        private string balanceTypeField;
        
        private string balanceIdField;
        
        private string systemVersionField;
        
        private string bridgeSerialNumberField;
        
        private string terminalSerialNumberField;
        
        private string loadcellIdField;
        
        private string bridgeTdnrField;
        
        private string terminalTdnrField;
        
        private string lastServiceField;
        
        private string nextServiceField;
        
        private string nextBatteryChangeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string BalanceType
        {
            get
            {
                return this.balanceTypeField;
            }
            set
            {
                this.balanceTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BalanceId
        {
            get
            {
                return this.balanceIdField;
            }
            set
            {
                this.balanceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string SystemVersion
        {
            get
            {
                return this.systemVersionField;
            }
            set
            {
                this.systemVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string BridgeSerialNumber
        {
            get
            {
                return this.bridgeSerialNumberField;
            }
            set
            {
                this.bridgeSerialNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string TerminalSerialNumber
        {
            get
            {
                return this.terminalSerialNumberField;
            }
            set
            {
                this.terminalSerialNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string LoadcellId
        {
            get
            {
                return this.loadcellIdField;
            }
            set
            {
                this.loadcellIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string BridgeTdnr
        {
            get
            {
                return this.bridgeTdnrField;
            }
            set
            {
                this.bridgeTdnrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string TerminalTdnr
        {
            get
            {
                return this.terminalTdnrField;
            }
            set
            {
                this.terminalTdnrField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string LastService
        {
            get
            {
                return this.lastServiceField;
            }
            set
            {
                this.lastServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string NextService
        {
            get
            {
                return this.nextServiceField;
            }
            set
            {
                this.nextServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string NextBatteryChange
        {
            get
            {
                return this.nextBatteryChangeField;
            }
            set
            {
                this.nextBatteryChangeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class DeviceInfo
    {
        
        private BalanceInfo balanceInfoField;
        
        private decimal maximumBalanceCapacityField;
        
        private string[] readabilitiesField;
        
        private string terminalKindField;
        
        private int[] numberOfVerifiedLftDigitsField;
        
        private DraftShield[] draftShieldsField;
        
        private string[] licensesField;
        
        private PeripheralInfo[] peripheralsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BalanceInfo BalanceInfo
        {
            get
            {
                return this.balanceInfoField;
            }
            set
            {
                this.balanceInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public decimal MaximumBalanceCapacity
        {
            get
            {
                return this.maximumBalanceCapacityField;
            }
            set
            {
                this.maximumBalanceCapacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] Readabilities
        {
            get
            {
                return this.readabilitiesField;
            }
            set
            {
                this.readabilitiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TerminalKind
        {
            get
            {
                return this.terminalKindField;
            }
            set
            {
                this.terminalKindField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public int[] NumberOfVerifiedLftDigits
        {
            get
            {
                return this.numberOfVerifiedLftDigitsField;
            }
            set
            {
                this.numberOfVerifiedLftDigitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public DraftShield[] DraftShields
        {
            get
            {
                return this.draftShieldsField;
            }
            set
            {
                this.draftShieldsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public string[] Licenses
        {
            get
            {
                return this.licensesField;
            }
            set
            {
                this.licensesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        public PeripheralInfo[] Peripherals
        {
            get
            {
                return this.peripheralsField;
            }
            set
            {
                this.peripheralsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DraftShieldInformation))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class DraftShieldPosition
    {
        
        private DraftShieldIdentifier draftShieldIdField;
        
        private int openingWidthField;
        
        private System.Nullable<OpeningSide> openingSideField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DraftShieldIdentifier DraftShieldId
        {
            get
            {
                return this.draftShieldIdField;
            }
            set
            {
                this.draftShieldIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int OpeningWidth
        {
            get
            {
                return this.openingWidthField;
            }
            set
            {
                this.openingWidthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<OpeningSide> OpeningSide
        {
            get
            {
                return this.openingSideField;
            }
            set
            {
                this.openingSideField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum DraftShieldIdentifier
    {
        
        /// <remarks/>
        LeftOuter,
        
        /// <remarks/>
        RightOuter,
        
        /// <remarks/>
        LeftInner,
        
        /// <remarks/>
        RightInner,
        
        /// <remarks/>
        Top,
        
        /// <remarks/>
        Radial,
        
        /// <remarks/>
        Flap,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum OpeningSide
    {
        
        /// <remarks/>
        OpenRight,
        
        /// <remarks/>
        OpenLeft,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class DraftShieldInformation : DraftShieldPosition
    {
        
        private string descriptionField;
        
        private PositionDeterminationOutcome positionDeterminationOutcomeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public PositionDeterminationOutcome PositionDeterminationOutcome
        {
            get
            {
                return this.positionDeterminationOutcomeField;
            }
            set
            {
                this.positionDeterminationOutcomeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum PositionDeterminationOutcome
    {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Intermediate,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BufferOverrunEvent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EventNotification))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResultProtocolEventNotification))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StartRoutineTestAsyncNotification))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StartTestWithBuiltInWeightAsyncNotification))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StartAdjustmentAsyncNotification))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RedirectUiKeyPressEventsAsyncNotification))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetWeightAsyncNotification))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetWeightRepeatedAsyncNotification))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class AsynchronousNotification
    {
        
        private int commandIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int CommandId
        {
            get
            {
                return this.commandIdField;
            }
            set
            {
                this.commandIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class BufferOverrunEvent : AsynchronousNotification
    {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResultProtocolEventNotification))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class EventNotification : AsynchronousNotification
    {
        
        private EventNotificationType notificationTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public EventNotificationType NotificationType
        {
            get
            {
                return this.notificationTypeField;
            }
            set
            {
                this.notificationTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum EventNotificationType
    {
        
        /// <remarks/>
        Standby,
        
        /// <remarks/>
        UserLoggedOut,
        
        /// <remarks/>
        SystemMemoryLow,
        
        /// <remarks/>
        SystemMemoryCritical,
        
        /// <remarks/>
        AlibiMemoryLow,
        
        /// <remarks/>
        AlibiMemoryFull,
        
        /// <remarks/>
        TareExecuted,
        
        /// <remarks/>
        ZeroExecuted,
        
        /// <remarks/>
        ResultProtocolEntryAdded,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class ResultProtocolEventNotification : EventNotification
    {
        
        private WeighingItem weighingItemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public WeighingItem WeighingItem
        {
            get
            {
                return this.weighingItemField;
            }
            set
            {
                this.weighingItemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class WeighingItem
    {
        
        private ResultState resultStateField;
        
        private string[] taskIdsField;
        
        private string[] resultIdsField;
        
        private WeightSample weightSampleField;
        
        private System.Nullable<int> alibiIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ResultState ResultState
        {
            get
            {
                return this.resultStateField;
            }
            set
            {
                this.resultStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] TaskIds
        {
            get
            {
                return this.taskIdsField;
            }
            set
            {
                this.taskIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] ResultIds
        {
            get
            {
                return this.resultIdsField;
            }
            set
            {
                this.resultIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public WeightSample WeightSample
        {
            get
            {
                return this.weightSampleField;
            }
            set
            {
                this.weightSampleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<int> AlibiId
        {
            get
            {
                return this.alibiIdField;
            }
            set
            {
                this.alibiIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum ResultState
    {
        
        /// <remarks/>
        Undefined,
        
        /// <remarks/>
        Ok,
        
        /// <remarks/>
        NotOk,
        
        /// <remarks/>
        Excluded,
        
        /// <remarks/>
        ItemSpecific,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class StartRoutineTestAsyncNotification : AsynchronousNotification
    {
        
        private RoutineTestStepInstruction testStepInstructionField;
        
        private WeightWithUnit testWeightField;
        
        private System.Nullable<RoutineTestResult> testResultField;
        
        private System.Nullable<OutputResult> outputErrorField;
        
        private System.Nullable<FailureReason> failureReasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public RoutineTestStepInstruction TestStepInstruction
        {
            get
            {
                return this.testStepInstructionField;
            }
            set
            {
                this.testStepInstructionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public WeightWithUnit TestWeight
        {
            get
            {
                return this.testWeightField;
            }
            set
            {
                this.testWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<RoutineTestResult> TestResult
        {
            get
            {
                return this.testResultField;
            }
            set
            {
                this.testResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<OutputResult> OutputError
        {
            get
            {
                return this.outputErrorField;
            }
            set
            {
                this.outputErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<FailureReason> FailureReason
        {
            get
            {
                return this.failureReasonField;
            }
            set
            {
                this.failureReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum RoutineTestStepInstruction
    {
        
        /// <remarks/>
        RemoveWeight,
        
        /// <remarks/>
        PlaceTareContainer,
        
        /// <remarks/>
        PlaceWeight,
        
        /// <remarks/>
        Finished,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class WeightWithUnit
    {
        
        private System.Nullable<decimal> valueField;
        
        private Unit unitField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<decimal> Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Unit Unit
        {
            get
            {
                return this.unitField;
            }
            set
            {
                this.unitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum RoutineTestResult
    {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Passed,
        
        /// <remarks/>
        PassedWithWarning,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Canceled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum OutputResult
    {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        PrinterOffline,
        
        /// <remarks/>
        NoStripPrinterConfigured,
        
        /// <remarks/>
        NoLabelPrinterConfigured,
        
        /// <remarks/>
        NoOfficePrinterConfigured,
        
        /// <remarks/>
        NoLabelPrinterTemplateConfigured,
        
        /// <remarks/>
        PrinterUnknownError,
        
        /// <remarks/>
        NoUsbDevicesFound,
        
        /// <remarks/>
        MultipleUsbDevicesFound,
        
        /// <remarks/>
        NotEnoughMemory,
        
        /// <remarks/>
        ExportUnknownError,
        
        /// <remarks/>
        FileServerConnectionError,
        
        /// <remarks/>
        Completed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum FailureReason
    {
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Canceled,
        
        /// <remarks/>
        Timeout,
        
        /// <remarks/>
        OutOfSpecification,
        
        /// <remarks/>
        Overload,
        
        /// <remarks/>
        Underload,
        
        /// <remarks/>
        NegativeGrossWeight,
        
        /// <remarks/>
        AboveZeroRange,
        
        /// <remarks/>
        BelowZeroRange,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class StartTestWithBuiltInWeightAsyncNotification : AsynchronousNotification
    {
        
        private System.Nullable<decimal> weightDeviationField;
        
        private System.Nullable<FailureReason> failureReasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<decimal> WeightDeviation
        {
            get
            {
                return this.weightDeviationField;
            }
            set
            {
                this.weightDeviationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<FailureReason> FailureReason
        {
            get
            {
                return this.failureReasonField;
            }
            set
            {
                this.failureReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class StartAdjustmentAsyncNotification : AsynchronousNotification
    {
        
        private AdjustmentStepInstruction adjustmentStepInstructionField;
        
        private System.Nullable<AdjustmentResult> adjustmentResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public AdjustmentStepInstruction AdjustmentStepInstruction
        {
            get
            {
                return this.adjustmentStepInstructionField;
            }
            set
            {
                this.adjustmentStepInstructionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<AdjustmentResult> AdjustmentResult
        {
            get
            {
                return this.adjustmentResultField;
            }
            set
            {
                this.adjustmentResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum AdjustmentStepInstruction
    {
        
        /// <remarks/>
        PlaceTestWeight,
        
        /// <remarks/>
        RemoveTestWeight,
        
        /// <remarks/>
        Finished,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum AdjustmentResult
    {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Done,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Canceled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class RedirectUiKeyPressEventsAsyncNotification : AsynchronousNotification
    {
        
        private KeyId keyIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public KeyId KeyId
        {
            get
            {
                return this.keyIdField;
            }
            set
            {
                this.keyIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum KeyId
    {
        
        /// <remarks/>
        TopFlyIn,
        
        /// <remarks/>
        RightFlyIn,
        
        /// <remarks/>
        LeftFlyIn,
        
        /// <remarks/>
        Standby,
        
        /// <remarks/>
        PowerOn,
        
        /// <remarks/>
        Tare,
        
        /// <remarks/>
        Zero,
        
        /// <remarks/>
        Home,
        
        /// <remarks/>
        DoorLeft,
        
        /// <remarks/>
        DoorRight,
        
        /// <remarks/>
        Door,
        
        /// <remarks/>
        AddResult,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetWeightRepeatedAsyncNotification))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class GetWeightAsyncNotification : AsynchronousNotification
    {
        
        private Outcome outcomeField;
        
        private WeightSample weightSampleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Outcome Outcome
        {
            get
            {
                return this.outcomeField;
            }
            set
            {
                this.outcomeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public WeightSample WeightSample
        {
            get
            {
                return this.weightSampleField;
            }
            set
            {
                this.weightSampleField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class GetWeightRepeatedAsyncNotification : GetWeightAsyncNotification
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class RoutineTestDescription
    {
        
        private string nameField;
        
        private RoutineTestType routineTestTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RoutineTestType RoutineTestType
        {
            get
            {
                return this.routineTestTypeField;
            }
            set
            {
                this.routineTestTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum RoutineTestType
    {
        
        /// <remarks/>
        Sensitivity,
        
        /// <remarks/>
        Repeatability,
        
        /// <remarks/>
        Eccentricity,
        
        /// <remarks/>
        Linearity,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class MinWeighLimit
    {
        
        private string tareWeightField;
        
        private string smallestNetWeightField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TareWeight
        {
            get
            {
                return this.tareWeightField;
            }
            set
            {
                this.tareWeightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SmallestNetWeight
        {
            get
            {
                return this.smallestNetWeightField;
            }
            set
            {
                this.smallestNetWeightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class MinWeighProfile
    {
        
        private string certificateIdField;
        
        private string minWeighTypeField;
        
        private string weighingToleranceField;
        
        private string safetyFactorField;
        
        private string expansionFactorField;
        
        private MinWeighLimit[] minWeighLimitsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CertificateId
        {
            get
            {
                return this.certificateIdField;
            }
            set
            {
                this.certificateIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MinWeighType
        {
            get
            {
                return this.minWeighTypeField;
            }
            set
            {
                this.minWeighTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string WeighingTolerance
        {
            get
            {
                return this.weighingToleranceField;
            }
            set
            {
                this.weighingToleranceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string SafetyFactor
        {
            get
            {
                return this.safetyFactorField;
            }
            set
            {
                this.safetyFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ExpansionFactor
        {
            get
            {
                return this.expansionFactorField;
            }
            set
            {
                this.expansionFactorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public MinWeighLimit[] MinWeighLimits
        {
            get
            {
                return this.minWeighLimitsField;
            }
            set
            {
                this.minWeighLimitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class CalibrationCertificateInfo
    {
        
        private string certificateIdField;
        
        private System.Nullable<System.DateTime> calibrationDateField;
        
        private System.Nullable<System.DateTime> nextCalibrationDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CertificateId
        {
            get
            {
                return this.certificateIdField;
            }
            set
            {
                this.certificateIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<System.DateTime> CalibrationDate
        {
            get
            {
                return this.calibrationDateField;
            }
            set
            {
                this.calibrationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<System.DateTime> NextCalibrationDate
        {
            get
            {
                return this.nextCalibrationDateField;
            }
            set
            {
                this.nextCalibrationDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class ToleranceProfile
    {
        
        private string nameField;
        
        private ScreenMarkColor screenMarkColorField;
        
        private string screenMarkTextField;
        
        private EnvironmentMode environmentModeField;
        
        private WeighingMode weighingModeField;
        
        private ValueReleaseMode valueReleaseModeField;
        
        private Readability displayReadabilityField;
        
        private bool zeroDriftCompensationField;
        
        private Unit[] allowedUnitsField;
        
        private CalibrationCertificateInfo calibrationCertificateInfoField;
        
        private MinWeighProfile minWeighProfileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ScreenMarkColor ScreenMarkColor
        {
            get
            {
                return this.screenMarkColorField;
            }
            set
            {
                this.screenMarkColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ScreenMarkText
        {
            get
            {
                return this.screenMarkTextField;
            }
            set
            {
                this.screenMarkTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public EnvironmentMode EnvironmentMode
        {
            get
            {
                return this.environmentModeField;
            }
            set
            {
                this.environmentModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public WeighingMode WeighingMode
        {
            get
            {
                return this.weighingModeField;
            }
            set
            {
                this.weighingModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public ValueReleaseMode ValueReleaseMode
        {
            get
            {
                return this.valueReleaseModeField;
            }
            set
            {
                this.valueReleaseModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public Readability DisplayReadability
        {
            get
            {
                return this.displayReadabilityField;
            }
            set
            {
                this.displayReadabilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool ZeroDriftCompensation
        {
            get
            {
                return this.zeroDriftCompensationField;
            }
            set
            {
                this.zeroDriftCompensationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        public Unit[] AllowedUnits
        {
            get
            {
                return this.allowedUnitsField;
            }
            set
            {
                this.allowedUnitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public CalibrationCertificateInfo CalibrationCertificateInfo
        {
            get
            {
                return this.calibrationCertificateInfoField;
            }
            set
            {
                this.calibrationCertificateInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public MinWeighProfile MinWeighProfile
        {
            get
            {
                return this.minWeighProfileField;
            }
            set
            {
                this.minWeighProfileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum ScreenMarkColor
    {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Neutral,
        
        /// <remarks/>
        White,
        
        /// <remarks/>
        Yellow,
        
        /// <remarks/>
        Red,
        
        /// <remarks/>
        Blue,
        
        /// <remarks/>
        Green,
        
        /// <remarks/>
        Black,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum EnvironmentMode
    {
        
        /// <remarks/>
        Automatic,
        
        /// <remarks/>
        VeryUnstable,
        
        /// <remarks/>
        Unstable,
        
        /// <remarks/>
        Standard,
        
        /// <remarks/>
        Stable,
        
        /// <remarks/>
        VeryStable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum WeighingMode
    {
        
        /// <remarks/>
        DynamicWeighing,
        
        /// <remarks/>
        CheckWeighing,
        
        /// <remarks/>
        SensorMode,
        
        /// <remarks/>
        Dosing,
        
        /// <remarks/>
        Universal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum ValueReleaseMode
    {
        
        /// <remarks/>
        VeryReliable,
        
        /// <remarks/>
        Reliable,
        
        /// <remarks/>
        ReliableAndFast,
        
        /// <remarks/>
        Fast,
        
        /// <remarks/>
        VeryFast,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum Readability
    {
        
        /// <remarks/>
        Readability5d,
        
        /// <remarks/>
        Readability2d,
        
        /// <remarks/>
        Readability1000d,
        
        /// <remarks/>
        Readability100d,
        
        /// <remarks/>
        Readability10d,
        
        /// <remarks/>
        Readability1d,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class LabelAndValue
    {
        
        private LabelFieldId idField;
        
        private string labelField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LabelFieldId Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Label
        {
            get
            {
                return this.labelField;
            }
            set
            {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum LabelFieldId
    {
        
        /// <remarks/>
        TaskId1,
        
        /// <remarks/>
        TaskId2,
        
        /// <remarks/>
        TaskId3,
        
        /// <remarks/>
        ResultId1,
        
        /// <remarks/>
        ResultId2,
        
        /// <remarks/>
        ResultId3,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class MethodDescription
    {
        
        private string nameField;
        
        private MethodType methodTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public MethodType MethodType
        {
            get
            {
                return this.methodTypeField;
            }
            set
            {
                this.methodTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum MethodType
    {
        
        /// <remarks/>
        GeneralWeighing,
        
        /// <remarks/>
        SimpleFormulation,
        
        /// <remarks/>
        PieceCounting,
        
        /// <remarks/>
        IntervalWeighing,
        
        /// <remarks/>
        Titration,
        
        /// <remarks/>
        DensityDetermination,
        
        /// <remarks/>
        Sqc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public partial class TareWeight : MeasuredWeight
    {
        
        private bool preTareField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool PreTare
        {
            get
            {
                return this.preTareField;
            }
            set
            {
                this.preTareField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum WeightSampleStatus
    {
        
        /// <remarks/>
        Ok,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Overload,
        
        /// <remarks/>
        Underload,
        
        /// <remarks/>
        Undefined,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWeightRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetWeightRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<WeighingCaptureMode> WeighingCaptureMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<WeightDetectionMode> WeightDetectionMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> WeightChangeThreshold;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Unit> WeightChangeThresholdUnit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TimeIntervalCaptureDuration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TimeIntervalCaptureDelay;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TimeoutInSeconds;
        
        public GetWeightRequest()
        {
        }
        
        public GetWeightRequest(string SessionId, System.Nullable<WeighingCaptureMode> WeighingCaptureMode, System.Nullable<WeightDetectionMode> WeightDetectionMode, System.Nullable<decimal> WeightChangeThreshold, System.Nullable<Unit> WeightChangeThresholdUnit, System.Nullable<int> TimeIntervalCaptureDuration, System.Nullable<int> TimeIntervalCaptureDelay, System.Nullable<int> TimeoutInSeconds)
        {
            this.SessionId = SessionId;
            this.WeighingCaptureMode = WeighingCaptureMode;
            this.WeightDetectionMode = WeightDetectionMode;
            this.WeightChangeThreshold = WeightChangeThreshold;
            this.WeightChangeThresholdUnit = WeightChangeThresholdUnit;
            this.TimeIntervalCaptureDuration = TimeIntervalCaptureDuration;
            this.TimeIntervalCaptureDelay = TimeIntervalCaptureDelay;
            this.TimeoutInSeconds = TimeoutInSeconds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWeightResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetWeightResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public int CommandId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        public MT.Laboratory.Balance.XprXsr.V01.WeightSample WeightSample;
        
        public GetWeightResponse()
        {
        }
        
        public GetWeightResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, int CommandId, MT.Laboratory.Balance.XprXsr.V01.WeightSample WeightSample)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.CommandId = CommandId;
            this.WeightSample = WeightSample;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum TareZeroError
    {
        
        /// <remarks/>
        Overload,
        
        /// <remarks/>
        Underload,
        
        /// <remarks/>
        Undefined,
        
        /// <remarks/>
        StaticDetectionFailed,
        
        /// <remarks/>
        NotPossibleDueToCurrentWeighingWorkflowState,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ZeroRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ZeroRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ZeroImmediately;
        
        public ZeroRequest()
        {
        }
        
        public ZeroRequest(string SessionId, System.Nullable<bool> ZeroImmediately)
        {
            this.SessionId = SessionId;
            this.ZeroImmediately = ZeroImmediately;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ZeroResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ZeroResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<TareZeroError> ErrorState;
        
        public ZeroResponse()
        {
        }
        
        public ZeroResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, System.Nullable<TareZeroError> ErrorState)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.ErrorState = ErrorState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TareRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class TareRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> TareImmediately;
        
        public TareRequest()
        {
        }
        
        public TareRequest(string SessionId, System.Nullable<bool> TareImmediately)
        {
            this.SessionId = SessionId;
            this.TareImmediately = TareImmediately;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TareResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class TareResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<TareZeroError> ErrorState;
        
        public TareResponse()
        {
        }
        
        public TareResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, System.Nullable<TareZeroError> ErrorState)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.ErrorState = ErrorState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPretareValueRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetPretareValueRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public decimal Value;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.Unit Unit;
        
        public SetPretareValueRequest()
        {
        }
        
        public SetPretareValueRequest(string SessionId, decimal Value, MT.Laboratory.Balance.XprXsr.V01.Unit Unit)
        {
            this.SessionId = SessionId;
            this.Value = Value;
            this.Unit = Unit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPretareValueResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetPretareValueResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public SetPretareValueResponse()
        {
        }
        
        public SetPretareValueResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClearPretareValueRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ClearPretareValueRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public ClearPretareValueRequest()
        {
        }
        
        public ClearPretareValueRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClearPretareValueResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ClearPretareValueResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public ClearPretareValueResponse()
        {
        }
        
        public ClearPretareValueResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeighingServiceChannel : MT.Laboratory.Balance.XprXsr.V01.IWeighingService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeighingServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.IWeighingService>, MT.Laboratory.Balance.XprXsr.V01.IWeighingService
    {
        
        public WeighingServiceClient()
        {
        }
        
        public WeighingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public WeighingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public WeighingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public WeighingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetWeightRepeatedAsyncResponse GetWeightRepeatedAsync(MT.Laboratory.Balance.XprXsr.V01.GetWeightRepeatedAsyncRequest request)
        {
            return base.Channel.GetWeightRepeatedAsync(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetWeightAsyncResponse GetWeightAsync(MT.Laboratory.Balance.XprXsr.V01.GetWeightAsyncRequest request)
        {
            return base.Channel.GetWeightAsync(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetWeightResponse GetWeight(MT.Laboratory.Balance.XprXsr.V01.GetWeightRequest request)
        {
            return base.Channel.GetWeight(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.ZeroResponse Zero(MT.Laboratory.Balance.XprXsr.V01.ZeroRequest request)
        {
            return base.Channel.Zero(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.TareResponse Tare(MT.Laboratory.Balance.XprXsr.V01.TareRequest request)
        {
            return base.Channel.Tare(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.SetPretareValueResponse SetPretareValue(MT.Laboratory.Balance.XprXsr.V01.SetPretareValueRequest request)
        {
            return base.Channel.SetPretareValue(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.ClearPretareValueResponse ClearPretareValue(MT.Laboratory.Balance.XprXsr.V01.ClearPretareValueRequest request)
        {
            return base.Channel.ClearPretareValue(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.IWeighingTaskService")]
    public interface IWeighingTaskService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="GetListOfMethods", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetListOfMethodsResponse GetListOfMethods(MT.Laboratory.Balance.XprXsr.V01.GetListOfMethodsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="StartTask", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.StartTaskResponse StartTask(MT.Laboratory.Balance.XprXsr.V01.StartTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="CancelCurrentTask", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.CancelCurrentTaskResponse CancelCurrentTask(MT.Laboratory.Balance.XprXsr.V01.CancelCurrentTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="CompleteCurrentTask", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.CompleteCurrentTaskResponse CompleteCurrentTask(MT.Laboratory.Balance.XprXsr.V01.CompleteCurrentTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ResumeTask", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.ResumeTaskResponse ResumeTask(MT.Laboratory.Balance.XprXsr.V01.ResumeTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTargetValueAndTolerances", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetTargetValueAndTolerancesResponse GetTargetValueAndTolerances(MT.Laboratory.Balance.XprXsr.V01.GetTargetValueAndTolerancesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetTargetValueAndTolerances", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.SetTargetValueAndTolerancesResponse SetTargetValueAndTolerances(MT.Laboratory.Balance.XprXsr.V01.SetTargetValueAndTolerancesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClearTargetValueAndTolerances", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.ClearTargetValueAndTolerancesResponse ClearTargetValueAndTolerances(MT.Laboratory.Balance.XprXsr.V01.ClearTargetValueAndTolerancesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTaskAndResultIds", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetTaskAndResultIdsResponse GetTaskAndResultIds(MT.Laboratory.Balance.XprXsr.V01.GetTaskAndResultIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetTaskAndResultIds", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.SetTaskAndResultIdsResponse SetTaskAndResultIds(MT.Laboratory.Balance.XprXsr.V01.SetTaskAndResultIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetUnit", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.SetUnitResponse SetUnit(MT.Laboratory.Balance.XprXsr.V01.SetUnitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="AddToProtocol", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.AddToProtocolResponse AddToProtocol(MT.Laboratory.Balance.XprXsr.V01.AddToProtocolRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetActiveWeighingItem", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.SetActiveWeighingItemResponse SetActiveWeighingItem(MT.Laboratory.Balance.XprXsr.V01.SetActiveWeighingItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetWeighingItems", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetWeighingItemsResponse GetWeighingItems(MT.Laboratory.Balance.XprXsr.V01.GetWeighingItemsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListOfMethodsRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetListOfMethodsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public GetListOfMethodsRequest()
        {
        }
        
        public GetListOfMethodsRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListOfMethodsResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetListOfMethodsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.MethodDescription[] Methods;
        
        public GetListOfMethodsResponse()
        {
        }
        
        public GetListOfMethodsResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, MT.Laboratory.Balance.XprXsr.V01.MethodDescription[] Methods)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.Methods = Methods;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartTaskRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class StartTaskRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string MethodName;
        
        public StartTaskRequest()
        {
        }
        
        public StartTaskRequest(string SessionId, string MethodName)
        {
            this.SessionId = SessionId;
            this.MethodName = MethodName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartTaskResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class StartTaskResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public System.Guid TaskHandle;
        
        public StartTaskResponse()
        {
        }
        
        public StartTaskResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, System.Guid TaskHandle)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.TaskHandle = TaskHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelCurrentTaskRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class CancelCurrentTaskRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public CancelCurrentTaskRequest()
        {
        }
        
        public CancelCurrentTaskRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelCurrentTaskResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class CancelCurrentTaskResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public CancelCurrentTaskResponse()
        {
        }
        
        public CancelCurrentTaskResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CompleteCurrentTaskRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class CompleteCurrentTaskRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public CompleteCurrentTaskRequest()
        {
        }
        
        public CompleteCurrentTaskRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CompleteCurrentTaskResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class CompleteCurrentTaskResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.WeighingItem[] WeighingItems;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        public MT.Laboratory.Balance.XprXsr.V01.OutputResult[] OutputErrors;
        
        public CompleteCurrentTaskResponse()
        {
        }
        
        public CompleteCurrentTaskResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, MT.Laboratory.Balance.XprXsr.V01.WeighingItem[] WeighingItems, MT.Laboratory.Balance.XprXsr.V01.OutputResult[] OutputErrors)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.WeighingItems = WeighingItems;
            this.OutputErrors = OutputErrors;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResumeTaskRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ResumeTaskRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public System.Guid TaskHandle;
        
        public ResumeTaskRequest()
        {
        }
        
        public ResumeTaskRequest(string SessionId, System.Guid TaskHandle)
        {
            this.SessionId = SessionId;
            this.TaskHandle = TaskHandle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResumeTaskResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ResumeTaskResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public ResumeTaskResponse()
        {
        }
        
        public ResumeTaskResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetValueAndTolerancesRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetTargetValueAndTolerancesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public GetTargetValueAndTolerancesRequest()
        {
        }
        
        public GetTargetValueAndTolerancesRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTargetValueAndTolerancesResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetTargetValueAndTolerancesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.MeasuredWeight TargetWeight;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        public MT.Laboratory.Balance.XprXsr.V01.MeasuredWeight LowerTolerance;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=4)]
        public MT.Laboratory.Balance.XprXsr.V01.MeasuredWeight UpperTolerance;
        
        public GetTargetValueAndTolerancesResponse()
        {
        }
        
        public GetTargetValueAndTolerancesResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, MT.Laboratory.Balance.XprXsr.V01.MeasuredWeight TargetWeight, MT.Laboratory.Balance.XprXsr.V01.MeasuredWeight LowerTolerance, MT.Laboratory.Balance.XprXsr.V01.MeasuredWeight UpperTolerance)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.TargetWeight = TargetWeight;
            this.LowerTolerance = LowerTolerance;
            this.UpperTolerance = UpperTolerance;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTargetValueAndTolerancesRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetTargetValueAndTolerancesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public MT.Laboratory.Balance.XprXsr.V01.WeightWithUnit TargetWeight;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.WeightWithUnit LowerTolerance;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        public MT.Laboratory.Balance.XprXsr.V01.WeightWithUnit UpperTolerance;
        
        public SetTargetValueAndTolerancesRequest()
        {
        }
        
        public SetTargetValueAndTolerancesRequest(string SessionId, MT.Laboratory.Balance.XprXsr.V01.WeightWithUnit TargetWeight, MT.Laboratory.Balance.XprXsr.V01.WeightWithUnit LowerTolerance, MT.Laboratory.Balance.XprXsr.V01.WeightWithUnit UpperTolerance)
        {
            this.SessionId = SessionId;
            this.TargetWeight = TargetWeight;
            this.LowerTolerance = LowerTolerance;
            this.UpperTolerance = UpperTolerance;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTargetValueAndTolerancesResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetTargetValueAndTolerancesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public SetTargetValueAndTolerancesResponse()
        {
        }
        
        public SetTargetValueAndTolerancesResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClearTargetValueAndTolerancesRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ClearTargetValueAndTolerancesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public ClearTargetValueAndTolerancesRequest()
        {
        }
        
        public ClearTargetValueAndTolerancesRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClearTargetValueAndTolerancesResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ClearTargetValueAndTolerancesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public ClearTargetValueAndTolerancesResponse()
        {
        }
        
        public ClearTargetValueAndTolerancesResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskAndResultIdsRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetTaskAndResultIdsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public GetTaskAndResultIdsRequest()
        {
        }
        
        public GetTaskAndResultIdsRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskAndResultIdsResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetTaskAndResultIdsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.LabelAndValue[] TaskIdLabelsAndValues;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        public MT.Laboratory.Balance.XprXsr.V01.LabelAndValue[] ResultIdLabelsAndValues;
        
        public GetTaskAndResultIdsResponse()
        {
        }
        
        public GetTaskAndResultIdsResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, MT.Laboratory.Balance.XprXsr.V01.LabelAndValue[] TaskIdLabelsAndValues, MT.Laboratory.Balance.XprXsr.V01.LabelAndValue[] ResultIdLabelsAndValues)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.TaskIdLabelsAndValues = TaskIdLabelsAndValues;
            this.ResultIdLabelsAndValues = ResultIdLabelsAndValues;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTaskAndResultIdsRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetTaskAndResultIdsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public MT.Laboratory.Balance.XprXsr.V01.LabelAndValue[] TaskIdLabelsAndValues;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.LabelAndValue[] ResultIdLabelsAndValues;
        
        public SetTaskAndResultIdsRequest()
        {
        }
        
        public SetTaskAndResultIdsRequest(string SessionId, MT.Laboratory.Balance.XprXsr.V01.LabelAndValue[] TaskIdLabelsAndValues, MT.Laboratory.Balance.XprXsr.V01.LabelAndValue[] ResultIdLabelsAndValues)
        {
            this.SessionId = SessionId;
            this.TaskIdLabelsAndValues = TaskIdLabelsAndValues;
            this.ResultIdLabelsAndValues = ResultIdLabelsAndValues;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetTaskAndResultIdsResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetTaskAndResultIdsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public SetTaskAndResultIdsResponse()
        {
        }
        
        public SetTaskAndResultIdsResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUnitRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetUnitRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Unit> DisplayUnit;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsInfoUnitEnabled;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Unit> InfoUnit;
        
        public SetUnitRequest()
        {
        }
        
        public SetUnitRequest(string SessionId, System.Nullable<Unit> DisplayUnit, System.Nullable<bool> IsInfoUnitEnabled, System.Nullable<Unit> InfoUnit)
        {
            this.SessionId = SessionId;
            this.DisplayUnit = DisplayUnit;
            this.IsInfoUnitEnabled = IsInfoUnitEnabled;
            this.InfoUnit = InfoUnit;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUnitResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetUnitResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public SetUnitResponse()
        {
        }
        
        public SetUnitResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum ResultOutput
    {
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Ok,
        
        /// <remarks/>
        TimeoutDueInstability,
        
        /// <remarks/>
        Cancel,
        
        /// <remarks/>
        FailedAlibi,
        
        /// <remarks/>
        FailedAlibiFull,
        
        /// <remarks/>
        StaticDetectionFailed,
        
        /// <remarks/>
        NotPossibleDueToCurrentWeighingWorkflowState,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddToProtocolRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class AddToProtocolRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public AddToProtocolRequest()
        {
        }
        
        public AddToProtocolRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddToProtocolResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class AddToProtocolResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ResultOutput> ResultOutput;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        public MT.Laboratory.Balance.XprXsr.V01.WeighingItem WeighingItem;
        
        public AddToProtocolResponse()
        {
        }
        
        public AddToProtocolResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, System.Nullable<ResultOutput> ResultOutput, MT.Laboratory.Balance.XprXsr.V01.WeighingItem WeighingItem)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.ResultOutput = ResultOutput;
            this.WeighingItem = WeighingItem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetActiveWeighingItemRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetActiveWeighingItemRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public int NumberOfItemInResultProtocol;
        
        public SetActiveWeighingItemRequest()
        {
        }
        
        public SetActiveWeighingItemRequest(string SessionId, int NumberOfItemInResultProtocol)
        {
            this.SessionId = SessionId;
            this.NumberOfItemInResultProtocol = NumberOfItemInResultProtocol;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetActiveWeighingItemResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetActiveWeighingItemResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public SetActiveWeighingItemResponse()
        {
        }
        
        public SetActiveWeighingItemResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWeighingItemsRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetWeighingItemsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public GetWeighingItemsRequest()
        {
        }
        
        public GetWeighingItemsRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetWeighingItemsResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetWeighingItemsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.WeighingItem[] WeighingItems;
        
        public GetWeighingItemsResponse()
        {
        }
        
        public GetWeighingItemsResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, MT.Laboratory.Balance.XprXsr.V01.WeighingItem[] WeighingItems)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.WeighingItems = WeighingItems;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeighingTaskServiceChannel : MT.Laboratory.Balance.XprXsr.V01.IWeighingTaskService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeighingTaskServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.IWeighingTaskService>, MT.Laboratory.Balance.XprXsr.V01.IWeighingTaskService
    {
        
        public WeighingTaskServiceClient()
        {
        }
        
        public WeighingTaskServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public WeighingTaskServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public WeighingTaskServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public WeighingTaskServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetListOfMethodsResponse GetListOfMethods(MT.Laboratory.Balance.XprXsr.V01.GetListOfMethodsRequest request)
        {
            return base.Channel.GetListOfMethods(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.StartTaskResponse StartTask(MT.Laboratory.Balance.XprXsr.V01.StartTaskRequest request)
        {
            return base.Channel.StartTask(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.CancelCurrentTaskResponse CancelCurrentTask(MT.Laboratory.Balance.XprXsr.V01.CancelCurrentTaskRequest request)
        {
            return base.Channel.CancelCurrentTask(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.CompleteCurrentTaskResponse CompleteCurrentTask(MT.Laboratory.Balance.XprXsr.V01.CompleteCurrentTaskRequest request)
        {
            return base.Channel.CompleteCurrentTask(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.ResumeTaskResponse ResumeTask(MT.Laboratory.Balance.XprXsr.V01.ResumeTaskRequest request)
        {
            return base.Channel.ResumeTask(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetTargetValueAndTolerancesResponse GetTargetValueAndTolerances(MT.Laboratory.Balance.XprXsr.V01.GetTargetValueAndTolerancesRequest request)
        {
            return base.Channel.GetTargetValueAndTolerances(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.SetTargetValueAndTolerancesResponse SetTargetValueAndTolerances(MT.Laboratory.Balance.XprXsr.V01.SetTargetValueAndTolerancesRequest request)
        {
            return base.Channel.SetTargetValueAndTolerances(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.ClearTargetValueAndTolerancesResponse ClearTargetValueAndTolerances(MT.Laboratory.Balance.XprXsr.V01.ClearTargetValueAndTolerancesRequest request)
        {
            return base.Channel.ClearTargetValueAndTolerances(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetTaskAndResultIdsResponse GetTaskAndResultIds(MT.Laboratory.Balance.XprXsr.V01.GetTaskAndResultIdsRequest request)
        {
            return base.Channel.GetTaskAndResultIds(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.SetTaskAndResultIdsResponse SetTaskAndResultIds(MT.Laboratory.Balance.XprXsr.V01.SetTaskAndResultIdsRequest request)
        {
            return base.Channel.SetTaskAndResultIds(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.SetUnitResponse SetUnit(MT.Laboratory.Balance.XprXsr.V01.SetUnitRequest request)
        {
            return base.Channel.SetUnit(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.AddToProtocolResponse AddToProtocol(MT.Laboratory.Balance.XprXsr.V01.AddToProtocolRequest request)
        {
            return base.Channel.AddToProtocol(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.SetActiveWeighingItemResponse SetActiveWeighingItem(MT.Laboratory.Balance.XprXsr.V01.SetActiveWeighingItemRequest request)
        {
            return base.Channel.SetActiveWeighingItem(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetWeighingItemsResponse GetWeighingItems(MT.Laboratory.Balance.XprXsr.V01.GetWeighingItemsRequest request)
        {
            return base.Channel.GetWeighingItems(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.IUserInteractionService")]
    public interface IUserInteractionService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="ForwardBarcodeScannerInputAsync", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.ForwardBarcodeScannerInputAsyncResponse ForwardBarcodeScannerInputAsync(MT.Laboratory.Balance.XprXsr.V01.ForwardBarcodeScannerInputAsyncRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="RedirectUiKeyPressEventsAsync", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.RedirectUiKeyPressEventsAsyncResponse RedirectUiKeyPressEventsAsync(MT.Laboratory.Balance.XprXsr.V01.RedirectUiKeyPressEventsAsyncRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetUserInteractionOnUi", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.SetUserInteractionOnUiResponse SetUserInteractionOnUi(MT.Laboratory.Balance.XprXsr.V01.SetUserInteractionOnUiRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ForwardBarcodeScannerInputAsyncRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ForwardBarcodeScannerInputAsyncRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public ForwardBarcodeScannerInputAsyncRequest()
        {
        }
        
        public ForwardBarcodeScannerInputAsyncRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ForwardBarcodeScannerInputAsyncResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ForwardBarcodeScannerInputAsyncResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public int CommandId;
        
        public ForwardBarcodeScannerInputAsyncResponse()
        {
        }
        
        public ForwardBarcodeScannerInputAsyncResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, int CommandId)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.CommandId = CommandId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RedirectUiKeyPressEventsAsyncRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class RedirectUiKeyPressEventsAsyncRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public RedirectUiKeyPressEventsAsyncRequest()
        {
        }
        
        public RedirectUiKeyPressEventsAsyncRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RedirectUiKeyPressEventsAsyncResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class RedirectUiKeyPressEventsAsyncResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public int CommandId;
        
        public RedirectUiKeyPressEventsAsyncResponse()
        {
        }
        
        public RedirectUiKeyPressEventsAsyncResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, int CommandId)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.CommandId = CommandId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUserInteractionOnUiRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetUserInteractionOnUiRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public bool EnableUserInteractionOnUi;
        
        public SetUserInteractionOnUiRequest()
        {
        }
        
        public SetUserInteractionOnUiRequest(string SessionId, bool EnableUserInteractionOnUi)
        {
            this.SessionId = SessionId;
            this.EnableUserInteractionOnUi = EnableUserInteractionOnUi;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetUserInteractionOnUiResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetUserInteractionOnUiResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public SetUserInteractionOnUiResponse()
        {
        }
        
        public SetUserInteractionOnUiResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserInteractionServiceChannel : MT.Laboratory.Balance.XprXsr.V01.IUserInteractionService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserInteractionServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.IUserInteractionService>, MT.Laboratory.Balance.XprXsr.V01.IUserInteractionService
    {
        
        public UserInteractionServiceClient()
        {
        }
        
        public UserInteractionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public UserInteractionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public UserInteractionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public UserInteractionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.ForwardBarcodeScannerInputAsyncResponse ForwardBarcodeScannerInputAsync(MT.Laboratory.Balance.XprXsr.V01.ForwardBarcodeScannerInputAsyncRequest request)
        {
            return base.Channel.ForwardBarcodeScannerInputAsync(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.RedirectUiKeyPressEventsAsyncResponse RedirectUiKeyPressEventsAsync(MT.Laboratory.Balance.XprXsr.V01.RedirectUiKeyPressEventsAsyncRequest request)
        {
            return base.Channel.RedirectUiKeyPressEventsAsync(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.SetUserInteractionOnUiResponse SetUserInteractionOnUi(MT.Laboratory.Balance.XprXsr.V01.SetUserInteractionOnUiRequest request)
        {
            return base.Channel.SetUserInteractionOnUi(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.IToleranceProfileService")]
    public interface IToleranceProfileService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="GetListOfProfiles", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetListOfProfilesResponse GetListOfProfiles(MT.Laboratory.Balance.XprXsr.V01.GetListOfProfilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetActiveProfile", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetActiveProfileResponse GetActiveProfile(MT.Laboratory.Balance.XprXsr.V01.GetActiveProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetActiveProfile", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.SetActiveProfileResponse SetActiveProfile(MT.Laboratory.Balance.XprXsr.V01.SetActiveProfileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetSettings", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetSettingsResponse GetSettings(MT.Laboratory.Balance.XprXsr.V01.GetSettingsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListOfProfilesRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetListOfProfilesRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public GetListOfProfilesRequest()
        {
        }
        
        public GetListOfProfilesRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListOfProfilesResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetListOfProfilesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public string[] ToleranceProfileNames;
        
        public GetListOfProfilesResponse()
        {
        }
        
        public GetListOfProfilesResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, string[] ToleranceProfileNames)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.ToleranceProfileNames = ToleranceProfileNames;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveProfileRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetActiveProfileRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public GetActiveProfileRequest()
        {
        }
        
        public GetActiveProfileRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActiveProfileResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetActiveProfileResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public string ToleranceProfileName;
        
        public GetActiveProfileResponse()
        {
        }
        
        public GetActiveProfileResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, string ToleranceProfileName)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.ToleranceProfileName = ToleranceProfileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetActiveProfileRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetActiveProfileRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ToleranceProfileName;
        
        public SetActiveProfileRequest()
        {
        }
        
        public SetActiveProfileRequest(string SessionId, string ToleranceProfileName)
        {
            this.SessionId = SessionId;
            this.ToleranceProfileName = ToleranceProfileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetActiveProfileResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetActiveProfileResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public SetActiveProfileResponse()
        {
        }
        
        public SetActiveProfileResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSettingsRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetSettingsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ToleranceProfileName;
        
        public GetSettingsRequest()
        {
        }
        
        public GetSettingsRequest(string SessionId, string ToleranceProfileName)
        {
            this.SessionId = SessionId;
            this.ToleranceProfileName = ToleranceProfileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSettingsResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetSettingsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.ToleranceProfile ToleranceProfile;
        
        public GetSettingsResponse()
        {
        }
        
        public GetSettingsResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, MT.Laboratory.Balance.XprXsr.V01.ToleranceProfile ToleranceProfile)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.ToleranceProfile = ToleranceProfile;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IToleranceProfileServiceChannel : MT.Laboratory.Balance.XprXsr.V01.IToleranceProfileService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ToleranceProfileServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.IToleranceProfileService>, MT.Laboratory.Balance.XprXsr.V01.IToleranceProfileService
    {
        
        public ToleranceProfileServiceClient()
        {
        }
        
        public ToleranceProfileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ToleranceProfileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ToleranceProfileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ToleranceProfileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetListOfProfilesResponse GetListOfProfiles(MT.Laboratory.Balance.XprXsr.V01.GetListOfProfilesRequest request)
        {
            return base.Channel.GetListOfProfiles(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetActiveProfileResponse GetActiveProfile(MT.Laboratory.Balance.XprXsr.V01.GetActiveProfileRequest request)
        {
            return base.Channel.GetActiveProfile(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.SetActiveProfileResponse SetActiveProfile(MT.Laboratory.Balance.XprXsr.V01.SetActiveProfileRequest request)
        {
            return base.Channel.SetActiveProfile(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetSettingsResponse GetSettings(MT.Laboratory.Balance.XprXsr.V01.GetSettingsRequest request)
        {
            return base.Channel.GetSettings(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.IRoutineTestService")]
    public interface IRoutineTestService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="GetListOfRoutineTests", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetListOfRoutineTestsResponse GetListOfRoutineTests(MT.Laboratory.Balance.XprXsr.V01.GetListOfRoutineTestsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="StartRoutineTestAsync", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.StartRoutineTestAsyncResponse StartRoutineTestAsync(MT.Laboratory.Balance.XprXsr.V01.StartRoutineTestAsyncRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="StartTestWithBuiltInWeightAsync", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.StartTestWithBuiltInWeightAsyncResponse StartTestWithBuiltInWeightAsync(MT.Laboratory.Balance.XprXsr.V01.StartTestWithBuiltInWeightAsyncRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListOfRoutineTestsRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetListOfRoutineTestsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public GetListOfRoutineTestsRequest()
        {
        }
        
        public GetListOfRoutineTestsRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListOfRoutineTestsResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetListOfRoutineTestsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.RoutineTestDescription[] RoutineTests;
        
        public GetListOfRoutineTestsResponse()
        {
        }
        
        public GetListOfRoutineTestsResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, MT.Laboratory.Balance.XprXsr.V01.RoutineTestDescription[] RoutineTests)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.RoutineTests = RoutineTests;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartRoutineTestAsyncRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class StartRoutineTestAsyncRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string RoutineTestName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public string[] TestWeightNames;
        
        public StartRoutineTestAsyncRequest()
        {
        }
        
        public StartRoutineTestAsyncRequest(string SessionId, string RoutineTestName, string[] TestWeightNames)
        {
            this.SessionId = SessionId;
            this.RoutineTestName = RoutineTestName;
            this.TestWeightNames = TestWeightNames;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartRoutineTestAsyncResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class StartRoutineTestAsyncResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public int CommandId;
        
        public StartRoutineTestAsyncResponse()
        {
        }
        
        public StartRoutineTestAsyncResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, int CommandId)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.CommandId = CommandId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartTestWithBuiltInWeightAsyncRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class StartTestWithBuiltInWeightAsyncRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public StartTestWithBuiltInWeightAsyncRequest()
        {
        }
        
        public StartTestWithBuiltInWeightAsyncRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartTestWithBuiltInWeightAsyncResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class StartTestWithBuiltInWeightAsyncResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public int CommandId;
        
        public StartTestWithBuiltInWeightAsyncResponse()
        {
        }
        
        public StartTestWithBuiltInWeightAsyncResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, int CommandId)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.CommandId = CommandId;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoutineTestServiceChannel : MT.Laboratory.Balance.XprXsr.V01.IRoutineTestService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoutineTestServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.IRoutineTestService>, MT.Laboratory.Balance.XprXsr.V01.IRoutineTestService
    {
        
        public RoutineTestServiceClient()
        {
        }
        
        public RoutineTestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public RoutineTestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public RoutineTestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public RoutineTestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetListOfRoutineTestsResponse GetListOfRoutineTests(MT.Laboratory.Balance.XprXsr.V01.GetListOfRoutineTestsRequest request)
        {
            return base.Channel.GetListOfRoutineTests(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.StartRoutineTestAsyncResponse StartRoutineTestAsync(MT.Laboratory.Balance.XprXsr.V01.StartRoutineTestAsyncRequest request)
        {
            return base.Channel.StartRoutineTestAsync(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.StartTestWithBuiltInWeightAsyncResponse StartTestWithBuiltInWeightAsync(MT.Laboratory.Balance.XprXsr.V01.StartTestWithBuiltInWeightAsyncRequest request)
        {
            return base.Channel.StartTestWithBuiltInWeightAsync(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.INotificationService")]
    public interface INotificationService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="GetNotifications", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetNotificationsResponse GetNotifications(MT.Laboratory.Balance.XprXsr.V01.GetNotificationsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNotificationsRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetNotificationsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LongPollingTimeout;
        
        public GetNotificationsRequest()
        {
        }
        
        public GetNotificationsRequest(string SessionId, System.Nullable<int> LongPollingTimeout)
        {
            this.SessionId = SessionId;
            this.LongPollingTimeout = LongPollingTimeout;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNotificationsResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetNotificationsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(BufferOverrunEvent))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(EventNotification))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(GetWeightAsyncNotification))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(GetWeightRepeatedAsyncNotification))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(RedirectUiKeyPressEventsAsyncNotification))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(ResultProtocolEventNotification))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(StartAdjustmentAsyncNotification))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(StartRoutineTestAsyncNotification))]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(StartTestWithBuiltInWeightAsyncNotification))]
        public MT.Laboratory.Balance.XprXsr.V01.AsynchronousNotification[] Notifications;
        
        public GetNotificationsResponse()
        {
        }
        
        public GetNotificationsResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, MT.Laboratory.Balance.XprXsr.V01.AsynchronousNotification[] Notifications)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.Notifications = Notifications;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INotificationServiceChannel : MT.Laboratory.Balance.XprXsr.V01.INotificationService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NotificationServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.INotificationService>, MT.Laboratory.Balance.XprXsr.V01.INotificationService
    {
        
        public NotificationServiceClient()
        {
        }
        
        public NotificationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public NotificationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public NotificationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public NotificationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetNotificationsResponse GetNotifications(MT.Laboratory.Balance.XprXsr.V01.GetNotificationsRequest request)
        {
            return base.Channel.GetNotifications(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.IFeederService")]
    public interface IFeederService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="ConfigureFeedRate", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.ConfigureFeedRateResponse ConfigureFeedRate(MT.Laboratory.Balance.XprXsr.V01.ConfigureFeedRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="VibrateUntilLightBarrierSignal", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.VibrateUntilLightBarrierSignalResponse VibrateUntilLightBarrierSignal(MT.Laboratory.Balance.XprXsr.V01.VibrateUntilLightBarrierSignalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="VibrateUntilStop", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.VibrateUntilStopResponse VibrateUntilStop(MT.Laboratory.Balance.XprXsr.V01.VibrateUntilStopRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Discharge", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.DischargeResponse Discharge(MT.Laboratory.Balance.XprXsr.V01.DischargeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="StopFeeder", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.StopFeederResponse StopFeeder(MT.Laboratory.Balance.XprXsr.V01.StopFeederRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum FeedRateLevel
    {
        
        /// <remarks/>
        Level4,
        
        /// <remarks/>
        Level3,
        
        /// <remarks/>
        Level2,
        
        /// <remarks/>
        Level1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigureFeedRateRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ConfigureFeedRateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public MT.Laboratory.Balance.XprXsr.V01.FeedRateLevel FeedRateLevel;
        
        public ConfigureFeedRateRequest()
        {
        }
        
        public ConfigureFeedRateRequest(string SessionId, MT.Laboratory.Balance.XprXsr.V01.FeedRateLevel FeedRateLevel)
        {
            this.SessionId = SessionId;
            this.FeedRateLevel = FeedRateLevel;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigureFeedRateResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ConfigureFeedRateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public bool FeederAttached;
        
        public ConfigureFeedRateResponse()
        {
        }
        
        public ConfigureFeedRateResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, bool FeederAttached)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.FeederAttached = FeederAttached;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VibrateUntilLightBarrierSignalRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class VibrateUntilLightBarrierSignalRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public VibrateUntilLightBarrierSignalRequest()
        {
        }
        
        public VibrateUntilLightBarrierSignalRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VibrateUntilLightBarrierSignalResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class VibrateUntilLightBarrierSignalResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public bool FeederAttached;
        
        public VibrateUntilLightBarrierSignalResponse()
        {
        }
        
        public VibrateUntilLightBarrierSignalResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, bool FeederAttached)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.FeederAttached = FeederAttached;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VibrateUntilStopRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class VibrateUntilStopRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public VibrateUntilStopRequest()
        {
        }
        
        public VibrateUntilStopRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VibrateUntilStopResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class VibrateUntilStopResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public bool FeederAttached;
        
        public VibrateUntilStopResponse()
        {
        }
        
        public VibrateUntilStopResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, bool FeederAttached)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.FeederAttached = FeederAttached;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DischargeRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class DischargeRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public DischargeRequest()
        {
        }
        
        public DischargeRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DischargeResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class DischargeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public bool FeederAttached;
        
        public DischargeResponse()
        {
        }
        
        public DischargeResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, bool FeederAttached)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.FeederAttached = FeederAttached;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StopFeederRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class StopFeederRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public StopFeederRequest()
        {
        }
        
        public StopFeederRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StopFeederResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class StopFeederResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public bool FeederAttached;
        
        public StopFeederResponse()
        {
        }
        
        public StopFeederResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, bool FeederAttached)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.FeederAttached = FeederAttached;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFeederServiceChannel : MT.Laboratory.Balance.XprXsr.V01.IFeederService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeederServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.IFeederService>, MT.Laboratory.Balance.XprXsr.V01.IFeederService
    {
        
        public FeederServiceClient()
        {
        }
        
        public FeederServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public FeederServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public FeederServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public FeederServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.ConfigureFeedRateResponse ConfigureFeedRate(MT.Laboratory.Balance.XprXsr.V01.ConfigureFeedRateRequest request)
        {
            return base.Channel.ConfigureFeedRate(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.VibrateUntilLightBarrierSignalResponse VibrateUntilLightBarrierSignal(MT.Laboratory.Balance.XprXsr.V01.VibrateUntilLightBarrierSignalRequest request)
        {
            return base.Channel.VibrateUntilLightBarrierSignal(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.VibrateUntilStopResponse VibrateUntilStop(MT.Laboratory.Balance.XprXsr.V01.VibrateUntilStopRequest request)
        {
            return base.Channel.VibrateUntilStop(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.DischargeResponse Discharge(MT.Laboratory.Balance.XprXsr.V01.DischargeRequest request)
        {
            return base.Channel.Discharge(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.StopFeederResponse StopFeeder(MT.Laboratory.Balance.XprXsr.V01.StopFeederRequest request)
        {
            return base.Channel.StopFeeder(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.IDraftShieldsService")]
    public interface IDraftShieldsService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="GetPosition", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetPositionResponse GetPosition(MT.Laboratory.Balance.XprXsr.V01.GetPositionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetPosition", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.SetPositionResponse SetPosition(MT.Laboratory.Balance.XprXsr.V01.SetPositionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPositionRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetPositionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public MT.Laboratory.Balance.XprXsr.V01.DraftShieldIdentifier[] DraftShieldIds;
        
        public GetPositionRequest()
        {
        }
        
        public GetPositionRequest(string SessionId, MT.Laboratory.Balance.XprXsr.V01.DraftShieldIdentifier[] DraftShieldIds)
        {
            this.SessionId = SessionId;
            this.DraftShieldIds = DraftShieldIds;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPositionResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetPositionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.DraftShieldInformation[] DraftShieldsInformation;
        
        public GetPositionResponse()
        {
        }
        
        public GetPositionResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, MT.Laboratory.Balance.XprXsr.V01.DraftShieldInformation[] DraftShieldsInformation)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.DraftShieldsInformation = DraftShieldsInformation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPositionRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetPositionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public MT.Laboratory.Balance.XprXsr.V01.DraftShieldPosition[] DraftShieldsPositions;
        
        public SetPositionRequest()
        {
        }
        
        public SetPositionRequest(string SessionId, MT.Laboratory.Balance.XprXsr.V01.DraftShieldPosition[] DraftShieldsPositions)
        {
            this.SessionId = SessionId;
            this.DraftShieldsPositions = DraftShieldsPositions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPositionResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetPositionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public SetPositionResponse()
        {
        }
        
        public SetPositionResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDraftShieldsServiceChannel : MT.Laboratory.Balance.XprXsr.V01.IDraftShieldsService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DraftShieldsServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.IDraftShieldsService>, MT.Laboratory.Balance.XprXsr.V01.IDraftShieldsService
    {
        
        public DraftShieldsServiceClient()
        {
        }
        
        public DraftShieldsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public DraftShieldsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public DraftShieldsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public DraftShieldsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetPositionResponse GetPosition(MT.Laboratory.Balance.XprXsr.V01.GetPositionRequest request)
        {
            return base.Channel.GetPosition(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.SetPositionResponse SetPosition(MT.Laboratory.Balance.XprXsr.V01.SetPositionRequest request)
        {
            return base.Channel.SetPosition(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.IBasicService")]
    public interface IBasicService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="Beep", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.BeepResponse Beep(MT.Laboratory.Balance.XprXsr.V01.BeepRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDeviceInformation", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetDeviceInformationResponse GetDeviceInformation(MT.Laboratory.Balance.XprXsr.V01.GetDeviceInformationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="WakeupFromStandby", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.WakeupFromStandbyResponse WakeupFromStandby(MT.Laboratory.Balance.XprXsr.V01.WakeupFromStandbyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="GoToStandby", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GoToStandbyResponse GoToStandby(MT.Laboratory.Balance.XprXsr.V01.GoToStandbyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetDateAndTime", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.SetDateAndTimeResponse SetDateAndTime(MT.Laboratory.Balance.XprXsr.V01.SetDateAndTimeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ShowCustomTextOnDisplay", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.ShowCustomTextOnDisplayResponse ShowCustomTextOnDisplay(MT.Laboratory.Balance.XprXsr.V01.ShowCustomTextOnDisplayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ClearCustomTextOnDisplay", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.ClearCustomTextOnDisplayResponse ClearCustomTextOnDisplay(MT.Laboratory.Balance.XprXsr.V01.ClearCustomTextOnDisplayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="PrintTextOnStripPrinter", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.PrintTextOnStripPrinterResponse PrintTextOnStripPrinter(MT.Laboratory.Balance.XprXsr.V01.PrintTextOnStripPrinterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="RegisterForEvents", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.RegisterForEventsResponse RegisterForEvents(MT.Laboratory.Balance.XprXsr.V01.RegisterForEventsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BeepRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class BeepRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public BeepRequest()
        {
        }
        
        public BeepRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BeepResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class BeepResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public BeepResponse()
        {
        }
        
        public BeepResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeviceInformationRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetDeviceInformationRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public GetDeviceInformationRequest()
        {
        }
        
        public GetDeviceInformationRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDeviceInformationResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetDeviceInformationResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.DeviceInfo DeviceInfo;
        
        public GetDeviceInformationResponse()
        {
        }
        
        public GetDeviceInformationResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, MT.Laboratory.Balance.XprXsr.V01.DeviceInfo DeviceInfo)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.DeviceInfo = DeviceInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WakeupFromStandbyRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class WakeupFromStandbyRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public WakeupFromStandbyRequest()
        {
        }
        
        public WakeupFromStandbyRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="WakeupFromStandbyResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class WakeupFromStandbyResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public bool IsStandbyActive;
        
        public WakeupFromStandbyResponse()
        {
        }
        
        public WakeupFromStandbyResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, bool IsStandbyActive)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.IsStandbyActive = IsStandbyActive;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GoToStandbyRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GoToStandbyRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public GoToStandbyRequest()
        {
        }
        
        public GoToStandbyRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GoToStandbyResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GoToStandbyResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public bool IsStandbyActive;
        
        public GoToStandbyResponse()
        {
        }
        
        public GoToStandbyResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, bool IsStandbyActive)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.IsStandbyActive = IsStandbyActive;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDateAndTimeRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetDateAndTimeRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public System.DateTime DateTime;
        
        public SetDateAndTimeRequest()
        {
        }
        
        public SetDateAndTimeRequest(string SessionId, System.DateTime DateTime)
        {
            this.SessionId = SessionId;
            this.DateTime = DateTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDateAndTimeResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetDateAndTimeResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public SetDateAndTimeResponse()
        {
        }
        
        public SetDateAndTimeResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShowCustomTextOnDisplayRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ShowCustomTextOnDisplayRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string Text;
        
        public ShowCustomTextOnDisplayRequest()
        {
        }
        
        public ShowCustomTextOnDisplayRequest(string SessionId, string Text)
        {
            this.SessionId = SessionId;
            this.Text = Text;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ShowCustomTextOnDisplayResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ShowCustomTextOnDisplayResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public ShowCustomTextOnDisplayResponse()
        {
        }
        
        public ShowCustomTextOnDisplayResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClearCustomTextOnDisplayRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ClearCustomTextOnDisplayRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public ClearCustomTextOnDisplayRequest()
        {
        }
        
        public ClearCustomTextOnDisplayRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ClearCustomTextOnDisplayResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class ClearCustomTextOnDisplayResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public ClearCustomTextOnDisplayResponse()
        {
        }
        
        public ClearCustomTextOnDisplayResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PrintTextOnStripPrinterRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class PrintTextOnStripPrinterRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string Text;
        
        public PrintTextOnStripPrinterRequest()
        {
        }
        
        public PrintTextOnStripPrinterRequest(string SessionId, string Text)
        {
            this.SessionId = SessionId;
            this.Text = Text;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PrintTextOnStripPrinterResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class PrintTextOnStripPrinterResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public PrintTextOnStripPrinterResponse()
        {
        }
        
        public PrintTextOnStripPrinterResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("svcutil", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01")]
    public enum EventTypes
    {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        Standby = 2,
        
        /// <remarks/>
        UserLoggedOut = 4,
        
        /// <remarks/>
        ZeroExecuted = 8,
        
        /// <remarks/>
        TareExecuted = 16,
        
        /// <remarks/>
        ResultProtocolEntryAdded = 32,
        
        /// <remarks/>
        SystemMemory = 64,
        
        /// <remarks/>
        AlibiMemory = 128,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterForEventsRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class RegisterForEventsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public MT.Laboratory.Balance.XprXsr.V01.EventTypes EventTypes;
        
        public RegisterForEventsRequest()
        {
        }
        
        public RegisterForEventsRequest(string SessionId, MT.Laboratory.Balance.XprXsr.V01.EventTypes EventTypes)
        {
            this.SessionId = SessionId;
            this.EventTypes = EventTypes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegisterForEventsResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class RegisterForEventsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public RegisterForEventsResponse()
        {
        }
        
        public RegisterForEventsResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBasicServiceChannel : MT.Laboratory.Balance.XprXsr.V01.IBasicService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BasicServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.IBasicService>, MT.Laboratory.Balance.XprXsr.V01.IBasicService
    {
        
        public BasicServiceClient()
        {
        }
        
        public BasicServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public BasicServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public BasicServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public BasicServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.BeepResponse Beep(MT.Laboratory.Balance.XprXsr.V01.BeepRequest request)
        {
            return base.Channel.Beep(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetDeviceInformationResponse GetDeviceInformation(MT.Laboratory.Balance.XprXsr.V01.GetDeviceInformationRequest request)
        {
            return base.Channel.GetDeviceInformation(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.WakeupFromStandbyResponse WakeupFromStandby(MT.Laboratory.Balance.XprXsr.V01.WakeupFromStandbyRequest request)
        {
            return base.Channel.WakeupFromStandby(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GoToStandbyResponse GoToStandby(MT.Laboratory.Balance.XprXsr.V01.GoToStandbyRequest request)
        {
            return base.Channel.GoToStandby(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.SetDateAndTimeResponse SetDateAndTime(MT.Laboratory.Balance.XprXsr.V01.SetDateAndTimeRequest request)
        {
            return base.Channel.SetDateAndTime(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.ShowCustomTextOnDisplayResponse ShowCustomTextOnDisplay(MT.Laboratory.Balance.XprXsr.V01.ShowCustomTextOnDisplayRequest request)
        {
            return base.Channel.ShowCustomTextOnDisplay(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.ClearCustomTextOnDisplayResponse ClearCustomTextOnDisplay(MT.Laboratory.Balance.XprXsr.V01.ClearCustomTextOnDisplayRequest request)
        {
            return base.Channel.ClearCustomTextOnDisplay(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.PrintTextOnStripPrinterResponse PrintTextOnStripPrinter(MT.Laboratory.Balance.XprXsr.V01.PrintTextOnStripPrinterRequest request)
        {
            return base.Channel.PrintTextOnStripPrinter(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.RegisterForEventsResponse RegisterForEvents(MT.Laboratory.Balance.XprXsr.V01.RegisterForEventsRequest request)
        {
            return base.Channel.RegisterForEvents(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.IAuthenticationService")]
    public interface IAuthenticationService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="LoginUser", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.LoginUserResponse LoginUser(MT.Laboratory.Balance.XprXsr.V01.LoginUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="LogoutUser", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.LogoutUserResponse LogoutUser(MT.Laboratory.Balance.XprXsr.V01.LogoutUserRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginUserRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class LoginUserRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public MT.Laboratory.Balance.XprXsr.V01.LoginCredentials LoginCredentials;
        
        public LoginUserRequest()
        {
        }
        
        public LoginUserRequest(string SessionId, MT.Laboratory.Balance.XprXsr.V01.LoginCredentials LoginCredentials)
        {
            this.SessionId = SessionId;
            this.LoginCredentials = LoginCredentials;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginUserResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class LoginUserResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public LoginUserResponse()
        {
        }
        
        public LoginUserResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogoutUserRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class LogoutUserRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public LogoutUserRequest()
        {
        }
        
        public LogoutUserRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogoutUserResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class LogoutUserResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public LogoutUserResponse()
        {
        }
        
        public LogoutUserResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationServiceChannel : MT.Laboratory.Balance.XprXsr.V01.IAuthenticationService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.IAuthenticationService>, MT.Laboratory.Balance.XprXsr.V01.IAuthenticationService
    {
        
        public AuthenticationServiceClient()
        {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public AuthenticationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.LoginUserResponse LoginUser(MT.Laboratory.Balance.XprXsr.V01.LoginUserRequest request)
        {
            return base.Channel.LoginUser(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.LogoutUserResponse LogoutUser(MT.Laboratory.Balance.XprXsr.V01.LogoutUserRequest request)
        {
            return base.Channel.LogoutUser(request);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", ConfigurationName="MT.Laboratory.Balance.XprXsr.V01.IAdjustmentService")]
    public interface IAdjustmentService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="GetAdjustmentStrategy", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.GetAdjustmentStrategyResponse GetAdjustmentStrategy(MT.Laboratory.Balance.XprXsr.V01.GetAdjustmentStrategyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="SetAdjustmentStrategy", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.SetAdjustmentStrategyResponse SetAdjustmentStrategy(MT.Laboratory.Balance.XprXsr.V01.SetAdjustmentStrategyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="StartAdjustmentAsync", ReplyAction="")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(BaseAdjustmentConfiguration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AsynchronousNotification))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ValueWithUnit))]
        MT.Laboratory.Balance.XprXsr.V01.StartAdjustmentAsyncResponse StartAdjustmentAsync(MT.Laboratory.Balance.XprXsr.V01.StartAdjustmentAsyncRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdjustmentStrategyRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetAdjustmentStrategyRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        public GetAdjustmentStrategyRequest()
        {
        }
        
        public GetAdjustmentStrategyRequest(string SessionId)
        {
            this.SessionId = SessionId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAdjustmentStrategyResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class GetAdjustmentStrategyResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.AdjustmentType AdjustmentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        public MT.Laboratory.Balance.XprXsr.V01.InternalAdjustmentConfiguration InternalAdjustmentConfiguration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=4)]
        public MT.Laboratory.Balance.XprXsr.V01.ExternalAdjustmentConfiguration ExternalAdjustmentConfiguration;
        
        public GetAdjustmentStrategyResponse()
        {
        }
        
        public GetAdjustmentStrategyResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, MT.Laboratory.Balance.XprXsr.V01.AdjustmentType AdjustmentType, MT.Laboratory.Balance.XprXsr.V01.InternalAdjustmentConfiguration InternalAdjustmentConfiguration, MT.Laboratory.Balance.XprXsr.V01.ExternalAdjustmentConfiguration ExternalAdjustmentConfiguration)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.AdjustmentType = AdjustmentType;
            this.InternalAdjustmentConfiguration = InternalAdjustmentConfiguration;
            this.ExternalAdjustmentConfiguration = ExternalAdjustmentConfiguration;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetAdjustmentStrategyRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetAdjustmentStrategyRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public MT.Laboratory.Balance.XprXsr.V01.AdjustmentType AdjustmentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public MT.Laboratory.Balance.XprXsr.V01.InternalAdjustmentConfiguration InternalAdjustmentConfiguration;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=3)]
        public MT.Laboratory.Balance.XprXsr.V01.ExternalAdjustmentConfiguration ExternalAdjustmentConfiguration;
        
        public SetAdjustmentStrategyRequest()
        {
        }
        
        public SetAdjustmentStrategyRequest(string SessionId, MT.Laboratory.Balance.XprXsr.V01.AdjustmentType AdjustmentType, MT.Laboratory.Balance.XprXsr.V01.InternalAdjustmentConfiguration InternalAdjustmentConfiguration, MT.Laboratory.Balance.XprXsr.V01.ExternalAdjustmentConfiguration ExternalAdjustmentConfiguration)
        {
            this.SessionId = SessionId;
            this.AdjustmentType = AdjustmentType;
            this.InternalAdjustmentConfiguration = InternalAdjustmentConfiguration;
            this.ExternalAdjustmentConfiguration = ExternalAdjustmentConfiguration;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetAdjustmentStrategyResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class SetAdjustmentStrategyResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        public SetAdjustmentStrategyResponse()
        {
        }
        
        public SetAdjustmentStrategyResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartAdjustmentAsyncRequest", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class StartAdjustmentAsyncRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public string SessionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public MT.Laboratory.Balance.XprXsr.V01.WeightWithUnit TestWeight;
        
        public StartAdjustmentAsyncRequest()
        {
        }
        
        public StartAdjustmentAsyncRequest(string SessionId, MT.Laboratory.Balance.XprXsr.V01.WeightWithUnit TestWeight)
        {
            this.SessionId = SessionId;
            this.TestWeight = TestWeight;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartAdjustmentAsyncResponse", WrapperNamespace="http://MT/Laboratory/Balance/XprXsr/V01", IsWrapped=true)]
    public partial class StartAdjustmentAsyncResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=0)]
        public MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=1)]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MT/Laboratory/Balance/XprXsr/V01", Order=2)]
        public int CommandId;
        
        public StartAdjustmentAsyncResponse()
        {
        }
        
        public StartAdjustmentAsyncResponse(MT.Laboratory.Balance.XprXsr.V01.Outcome Outcome, string ErrorMessage, int CommandId)
        {
            this.Outcome = Outcome;
            this.ErrorMessage = ErrorMessage;
            this.CommandId = CommandId;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdjustmentServiceChannel : MT.Laboratory.Balance.XprXsr.V01.IAdjustmentService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdjustmentServiceClient : System.ServiceModel.ClientBase<MT.Laboratory.Balance.XprXsr.V01.IAdjustmentService>, MT.Laboratory.Balance.XprXsr.V01.IAdjustmentService
    {
        
        public AdjustmentServiceClient()
        {
        }
        
        public AdjustmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public AdjustmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public AdjustmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public AdjustmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.GetAdjustmentStrategyResponse GetAdjustmentStrategy(MT.Laboratory.Balance.XprXsr.V01.GetAdjustmentStrategyRequest request)
        {
            return base.Channel.GetAdjustmentStrategy(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.SetAdjustmentStrategyResponse SetAdjustmentStrategy(MT.Laboratory.Balance.XprXsr.V01.SetAdjustmentStrategyRequest request)
        {
            return base.Channel.SetAdjustmentStrategy(request);
        }
        
        public MT.Laboratory.Balance.XprXsr.V01.StartAdjustmentAsyncResponse StartAdjustmentAsync(MT.Laboratory.Balance.XprXsr.V01.StartAdjustmentAsyncRequest request)
        {
            return base.Channel.StartAdjustmentAsync(request);
        }
    }
}
